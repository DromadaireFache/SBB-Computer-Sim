/ SBB COMPILER OUTPUT compiler.py
global_n = 13
global_y = 1
global_x = 0

global_main:
    lda 	global_n
    cmp# 	0
    jpne 	&local1
    ret
    *local1
    *loop_local2
    lda 	global_y
    add 	global_x
    sta 	global_y
    sub 	global_x
    sta 	global_x
    lda 	global_n
    dec
    sta 	global_n
    cmp# 	1
    jpne 	&loop_local2
    lda 	global_y
    ret

start:
    jsr 	global_main
    halt

/ 1 <- y
/ 2
/ 3
/ 4
/ 5
/ ...
/ let var[3] x = get(y, 2);

lda y 
add# 2
jsr load_heap
sta x0
lda y 
add# 3
jsr load_heap
sta x1
lda y 
add# 4
jsr load_heap
sta x2